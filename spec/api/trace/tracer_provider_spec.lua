require("spec.api.spec_helper")
local tracer_provider = require("lib.opentelemetry.api.trace.tracer_provider")

describe("get()", function()
    it("returns a new tracer and stores on tracer provider when none have already been created", function()
        local tp = tracer_provider.new()
        local t = tp:get("test", "0.1.0", "http://example.com/schema", {})
        assert.is_not_nil(tp.tracers["test-0.1.0-http://example.com/schema"])
        assert.are_same(t, tp.tracers["test-0.1.0-http://example.com/schema"])
    end)

    it("returns existing tracer when one has already been created", function()
        local tp = tracer_provider.new()
        local t = tp:get("test", "0.1.0", "http://example.com/schema", {})
        assert.is_not_nil(tp.tracers["test-0.1.0-http://example.com/schema"])
        assert.are_same(t, tp.tracers["test-0.1.0-http://example.com/schema"])
        local t2 = tp:get("test", "0.1.0", "http://example.com/schema", {})
    end)

    it("allows multiple tracers", function()
        local tp = tracer_provider.new()
        local t = tp:get("test", "0.1.0", "http://example.com/schema", {})
        local t2 = tp:get("test2", "0.1.0", "http://example.com/schema", {})
        assert.is_not_nil(tp.tracers["test-0.1.0-http://example.com/schema"])
        assert.is_not_nil(tp.tracers["test2-0.1.0-http://example.com/schema"])
        assert.are_not.equal(t, t2)
    end)

end)
